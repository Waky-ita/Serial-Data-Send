<Window x:Class="Serial_Data_Send.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Data_Set_ASC"
        mc:Ignorable="d"
        Title="Serial Data Send" Height="450" Width="475" Background="White" ResizeMode="CanResizeWithGrip" MinHeight="450" MaxHeight="450" >
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedBordersButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="3" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Margin="0,0,0,12" VerticalAlignment="Top">
        <ComboBox x:Name="AviablePortsComboBox" HorizontalAlignment="Left" Margin="92,40,0,0" VerticalAlignment="Top" Width="120" Height="22"/>
        <ComboBox x:Name="AviableBaudRateComboBox" HorizontalAlignment="Left" Margin="92,67,0,0" VerticalAlignment="Top" Width="120" Height="22" SelectedIndex="9"/>
        <ComboBox x:Name="AviableDataBitsComboBox" HorizontalAlignment="Left" Margin="92,94,0,0" VerticalAlignment="Top" Width="120" Height="22" SelectedIndex="3"/>
        <ComboBox x:Name="AviableStopBitsComboBox" HorizontalAlignment="Left" Margin="92,121,0,0" VerticalAlignment="Top" Width="120" Height="22" SelectedIndex="0"/>
        <ComboBox x:Name="AviableParityBitsComboBox" HorizontalAlignment="Left" Margin="92,148,0,0" VerticalAlignment="Top" Width="120" Height="22" SelectedIndex="0"/>
        <Button x:Name="SendButton" Content="Send" HorizontalAlignment="Left" Margin="26,352,0,0" Width="186" Style="{DynamicResource RoundedBordersButton}" Height="38" VerticalAlignment="Top" Click="Button_Click_2"/>
        <Label Content="Port" HorizontalAlignment="Left" Margin="15,36,0,0" VerticalAlignment="Top" Height="26" Width="72"/>
        <Label Content="Baud Rate" HorizontalAlignment="Left" Margin="15,63,0,0" VerticalAlignment="Top" Height="26" Width="72"/>
        <Label Content="Data Bits" HorizontalAlignment="Left" Margin="15,90,0,0" VerticalAlignment="Top" Height="26" Width="72"/>
        <Label Content="Stop Bits" HorizontalAlignment="Left" Margin="15,117,0,0" VerticalAlignment="Top" Height="26" Width="72"/>
        <Label Content="Parity Bits" HorizontalAlignment="Left" Margin="15,144,0,0" VerticalAlignment="Top" Height="26" Width="72"/>
        <GroupBox Header="Port Settings" Margin="10,10,0,0" HorizontalAlignment="Left" Width="220" Height="175" VerticalAlignment="Top"/>
        <GroupBox Header="Connection" Margin="10,190,0,0" Height="85" VerticalAlignment="Top" HorizontalAlignment="Left" Width="220"/>
        <Button x:Name="ClosePortButton" Content="Close" HorizontalAlignment="Left" Margin="132,222,0,0" VerticalAlignment="Top" Height="35" Width="80" Style="{DynamicResource RoundedBordersButton}" Click="Button_Click_1"/>
        <Button x:Name="OpenPortButton" Style="{DynamicResource RoundedBordersButton}" Content="Open" HorizontalAlignment="Left" Margin="26,222,0,0" VerticalAlignment="Top" Height="35" Width="80" Click="Button_Click"/>
        <GroupBox Header="Message" Margin="244,10,11,0">
            <TextBlock x:Name="MessageBoxField" TextWrapping="Wrap" Height="370" Margin="10,0,-2,0"    />
        </GroupBox>
        <ComboBox x:Name="StringToSendComboBox" HorizontalAlignment="Left" Margin="26,311,0,0" Width="186" Height="22" VerticalAlignment="Top">
            <CheckBox x:Name="AddTimeCheckBox" Content="Add currect time" IsChecked="True"/>
        </ComboBox>
        <GroupBox Header="String" ClipToBounds="True" HorizontalAlignment="Left" Width="220" Margin="10,280,0,0"/>

    </Grid>
</Window>
